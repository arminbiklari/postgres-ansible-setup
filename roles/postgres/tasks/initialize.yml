---
- name: Define postgresql_packages.
  ansible.builtin.set_fact:
    postgresql_packages: "{{ __postgresql_packages | list }}"
  when: postgresql_packages is not defined

- name: Define postgresql_version.
  ansible.builtin.set_fact:
    postgresql_version: "{{ __postgresql_version }}"
  when: postgresql_version is not defined

- name: Define postgresql_daemon.
  ansible.builtin.set_fact:
    postgresql_daemon: "{{ __postgresql_daemon }}"
  when: postgresql_daemon is not defined

- name: Define postgresql_data_dir.
  ansible.builtin.set_fact:
    postgresql_data_dir: "{{ __postgresql_data_dir }}"
  when: postgresql_data_dir is not defined

- name: Define postgresql_bin_path.
  ansible.builtin.set_fact:
    postgresql_bin_path: "{{ __postgresql_bin_path }}"
  when: postgresql_bin_path is not defined

- name: Define postgresql_config_path.
  ansible.builtin.set_fact:
    postgresql_config_path: "{{ __postgresql_config_path }}"
  when: postgresql_config_path is not defined

- name: Define postgresql_unix_socket_directories_mode.
  ansible.builtin.set_fact:
    postgresql_unix_socket_directories_mode: >-
      {{ __postgresql_unix_socket_directories_mode | default('02775') }}
  when: postgresql_unix_socket_directories_mode is not defined

- name: Define postgresql_log_dir.
  ansible.builtin.set_fact:
    # postgresql_global_config_options is an array but its keys are unique, so it can be converted to dict,
    # to easily get the value under the 'log_directory' key
    postgresql_log_dir: "{{ (postgresql_global_config_options | items2dict(key_name='option', value_name='value')).log_directory }}"

- name: Define postgresql_effective_log_dir, if postgresql_log_dir is absolute
  ansible.builtin.set_fact:
    postgresql_effective_log_dir: '{{ postgresql_log_dir }}'
  when: postgresql_log_dir is match("/")

- name: Define postgresql_effective_log_dir, if postgresql_log_dir is relative
  ansible.builtin.set_fact:
    postgresql_effective_log_dir: '{{ postgresql_data_dir }}/{{ postgresql_log_dir }}'
  when: postgresql_log_dir is not match("/")

- name: Import PostgreSQL GPG key
  ansible.builtin.apt_key:
    url: "{{ postgresql_gpg_key_url }}"
    state: present

- name: Add PostgreSQL 16 repository
  ansible.builtin.apt_repository:
    repo: "deb {{ postgresql_repo_url }} {{ ansible_distribution_release }}-pgdg main"
    filename: 'pgdg'
    state: present

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: Ensure PostgreSQL Python libraries are installed.
  ansible.builtin.apt:
    name: "{{ postgresql_python_library }}"
    state: present

- name: Ensure PostgreSQL packages are installed.
  ansible.builtin.apt:
    name: "{{ postgresql_packages }}"
    state: present

- name: Ensure all configured locales are present.
  ansible.builtin.locale_gen: "name={{ item }} state=present"
  with_items: "{{ postgresql_locales }}"
  register: locale_gen_result

- name: Force-restart PostgreSQL after new locales are generated.
  service:
    name: "{{ postgresql_daemon }}"
    state: restarted
  when: locale_gen_result.changed
